package upgrad;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

import java.sql.*;

public class Driver {

    /**
     * Driver class main method
     * @param args
     * @throws SQLException
     */
    public static void main(String[] args) {

        // MySql credentials
        String sqlURL = "jdbc:mysql://pgc-sd-bigdata.cyaielc9bmnf.us-east-1.rds.amazonaws.com:3306/pgcdata";
        String sqlUserName = "student";
        String sqlPassword = "STUDENT123";

        //Mongo DB Configuration details
        String mongoDBName = "upgrad";
        String mongoConnectionString="mongodb+srv://admin:admin@cluster0.srxca.mongodb.net/upgrad?retryWrites=true&w=majority";
        String mongoCollectinName = "products";


        // Connection Default Value Initialization
        Connection sqlConnection = null;
        MongoClient mongoClient = null;

        try {
            // Creating database connections
            mongoClient = MongoClients.create(mongoConnectionString);
            MongoDatabase db = mongoClient.getDatabase(mongoDBName);
            MongoCollection<Document> collection = db.getCollection(mongoCollectinName);

            if(mongoClient!=null){
                System.out.println("Connected to Mongo DB successfully");
            }

            //Initializing the MySQL Connection

            sqlConnection = DriverManager.getConnection(sqlURL,sqlUserName,sqlPassword);
            Statement statement = sqlConnection.createStatement();

            // Import data into MongoDb


            // List all products in the inventory
            //CRUDHelper.displayAllProducts(collection)

            // Display top 5 Mobiles
            //CRUDHelper.displayTop5Mobiles(collection);

            // Display products ordered by their categories in Descending Order Without autogenerated Id
            //CRUDHelper.displayCategoryOrderedProductsDescending(collection);

            // Display product count in each category
            //CRUDHelper.displayProductCountByCategory(collection);

            // Display wired headphones
            //CRUDHelper.displayWiredHeadphones(collection);
        }
        catch(Exception ex) {
            System.out.println("Got Exception.");
            ex.printStackTrace();
        }
        finally {
            // Close Connections
        }
    }
}